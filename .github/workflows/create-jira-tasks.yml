name: Create JIRA Sub-task from GitHub Issue Template

on:
  issues:
    types: [opened, edited]

jobs:
  create-jira-subtask:
    runs-on: ubuntu-latest
    steps:
      - name: Extract Epic Key from Issue Title
        id: extract-epic
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          # Epic 키 추출 (보통 "ABC-123" 형식)
          EPIC_KEY=$(echo "$ISSUE_TITLE" | grep -oE '[A-Z]+-[0-9]+')
          if [ -z "$EPIC_KEY" ]; then
            echo "Epic key not found in issue title. Skipping."
            exit 0
          fi
          echo "epic_key=$EPIC_KEY" >> $GITHUB_OUTPUT
          echo "project_key=${EPIC_KEY%%-*}" >> $GITHUB_OUTPUT
      
      - name: Get First Checked Item
        id: get-first-item
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const body = issue.data.body;
            
            // First checked item from issue form
            const match = body.match(/^\s*-\s*\[x\]\s*(.+)$/im);
            if (match) {
              core.setOutput('item', match[1].trim());
              return true;
            }
            return false;

      - name: Login to Jira
        if: steps.get-first-item.outputs.result == 'true'
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Create JIRA subtask
        if: steps.get-first-item.outputs.result == 'true'
        uses: atlassian/gajira-create@v3
        id: create-jira-task
        with:
          project: ${{ steps.extract-epic.outputs.project_key }}
          issuetype: "Sub-task"
          summary: "${{ steps.get-first-item.outputs.item }}"
          fields: '{"parent":{"key":"${{ steps.extract-epic.outputs.epic_key }}"}}'

      - name: Add Comment to GitHub Issue
        if: steps.get-first-item.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const epicKey = '${{ steps.extract-epic.outputs.epic_key }}';
            const createdKey = '${{ steps.create-jira-task.outputs.issue }}';
            const item = '${{ steps.get-first-item.outputs.item }}';
            
            let comment = '';
            
            if (createdKey) {
              comment += `:white_check_mark: Created JIRA sub-task under Epic ${epicKey}:\n`;
              comment += `- [${createdKey}] ${item}\n`;
            } else {
              comment += `:x: Failed to create JIRA sub-task\n`;
            }
            
            if (comment) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
